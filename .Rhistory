Prop_Ingles_A1 = mean(Ingles_A1),
Prop_Ingles_A2 = mean(Ingles_A2),
Prop_Ingles_B = mean(Ingles_B_mas),
Prop_Ingles_B1 = mean(Ingles_B1),
N_d = n() )
# Tamaños de muestra
Tamanos <- Infoaux[,c("CODIGOMUNICIPIO", "N_d")]
Tamanos$CODIGOMUNICIPIO <- as.character(Tamanos$CODIGOMUNICIPIO)
muestra3etapas$CODIGOMUNICIPIO <- as.character(muestra3etapas$CODIGOMUNICIPIO)
muestra3etapas$CALENDARIO <- as.factor(muestra3etapas$CALENDARIO)
muestra3etapas$NATURALEZA <- as.factor(muestra3etapas$NATURALEZA)
muestra3etapas$JORNADA <- as.factor(muestra3etapas$JORNADA)
muestra3etapas$PERS_GENERO <- as.factor(muestra3etapas$PERS_GENERO)
muestra3etapas$FINS_ESTRATOVIVIENDAENERGIA <- as.factor(muestra3etapas$FINS_ESTRATOVIVIENDAENERGIA)
muestra3etapas$FINS_PISOSHOGAR <- as.factor(muestra3etapas$FINS_PISOSHOGAR)
muestra3etapas$FINS_TIENEINTERNET <- as.factor(muestra3etapas$FINS_TIENEINTERNET)
muestra3etapas$FINS_TIENECOMPUTADOR <- as.factor(muestra3etapas$FINS_TIENECOMPUTADOR)
muestra3etapas$FINS_TIENEAUTOMOVILPARTICULAR <- as.factor(muestra3etapas$FINS_TIENEAUTOMOVILPARTICULAR)
muestra3etapas$INGLES_DESEM <- as.factor(muestra3etapas$INGLES_DESEM)
set.seed(12345)
x1 <- "LECTURA_CRITICA_PUNT"
x_1 <- paste0("Prom_",x1)
x2 <- "FINS_ESTRATOVIVIENDAENERGIA"
x_2 <- c("Prop_Estrato2", "Prop_Estrato3", "Prop_Estrato4", "Prop_Estrato5", "Prop_Estrato6")
x3 <- "CALENDARIO"
x_3 <- c("Prop_Naturaleza_Oficial")
x4 <- "PERS_GENERO"
x_4 <- c("Prom_Pers_Hogar")
BHF_Function <- function(x1,x3,x4){
ifelse(x3=="CALENDARIO", x_3<-c("Prop_Calendario_B", "Prop_Calendario_Flexible"),
ifelse(x3=="NATURALEZA", x_3<-c("Prop_Naturaleza_Oficial"),
ifelse(x3=="JORNADA", x_3<-c("Prop_Jornada_Completa", "Prop_Jornada_Manana",
"Prop_Jornada_Tarde", "Prop_Jornada_Noche"),
ifelse(x3=="EVALUADOS", x_3<-c("Prom_Evaluados")))))
ifelse(x4=="PERS_GENERO", x_4<-c("Prop_Genero_F"),
ifelse(x4=="FINS_PERSONASHOGARACTUAL", x_4<-c("Prom_Pers_Hogar"),
ifelse(x4=="FINS_CUARTOSHOGARACTUAL", x_4<-c("Prom_Cuartos_Hogar"),
ifelse(x4=="FINS_PISOSHOGAR", x_4<-c("Prop_Pisos_Cemento", "Prop_Pisos_Madera","Prop_Pisos_Baldosa_Marmol"),
ifelse(x4=="FINS_TIENEINTERNET", x_4<-c("Prop_Internet_Si"),
ifelse(x4=="FINS_TIENECOMPUTADOR", x_4<-c("Prop_Computador_Si"),
ifelse(x4=="FINS_TIENEAUTOMOVILPARTICULAR", x_4<-c("Prop_Auto_Si"),
ifelse(x4=="INGLES_DESEM", x_4<-c("Prop_Ingles_A1", "Prop_Ingles_A2",
"Prop_Ingles_B", "Prop_Ingles_B1")))))))))
Medias <- Infoaux[,c("CODIGOMUNICIPIO", paste0("Prom_",x1),
"Prop_Estrato2", "Prop_Estrato3", "Prop_Estrato4", "Prop_Estrato5", "Prop_Estrato6",
x_3,
x_4)]
Medias$CODIGOMUNICIPIO <- as.character(Medias$CODIGOMUNICIPIO)
formula <- as.formula(paste0("MATEMATICAS_PUNT", "~", x1, "+", "FINS_ESTRATOVIVIENDAENERGIA", "+", x3, "+", x4))
BHF <- pbmseBHF(formula,
dom = CODIGOMUNICIPIO,
meanxpop = Medias,
popnsize = Tamanos,
B = 200, data = muestra3etapas)
# Estimaciones para dominios externos (que no salieron en la muestra)
Beta_est <- BHF$est$fit$fixed
names(Beta_est) <- gsub("XsXs", "", names(Beta_est) )
names(Beta_est)[1] <-" Intercepto"
Beta_est <- as.matrix(Beta_est)
# Totales por dominio
Xbar_d <- Infoaux[ c(x_1, x_2, x_3, x_4)]
Unos <- as.data.frame(as.matrix(rep(1, nrow(Infoaux))))
Xbar_d <- cbind(Unos, Xbar_d)
Xbar_d <- as.matrix(Xbar_d)
rownames(Xbar_d) <- Infoaux$CODIGOMUNICIPIO
Prom_dominios <- Xbar_d %*% Beta_est
rownames(Prom_dominios) <- Infoaux$CODIGOMUNICIPIO
Prom_dominios <- as.data.frame(Prom_dominios)
Prom_dominios$domain <- row.names(Prom_dominios)
colnames(Prom_dominios)[1] <- "Ybar_efectosfijos"
# Conservar los dominios no observados
Prom_dominios_observados <- BHF$est$eblup
Prom_dominios <- merge(Prom_dominios, Prom_dominios_observados, by = "domain", all.x = T)
names(Prom_dominios)[1] <- "MUNICIPIO"
############ Estimaci�n MSE para dominios no observados ###########
modelo_mixto <- lme(formula, random = ~1 | as.factor(CODIGOMUNICIPIO), data = muestra3etapas)
Varest_betaest <- vcov(modelo_mixto)
sigma2est_u <- BHF[[1]]$fit$refvar
# Identificar los dominios no observados
dominios_noobservados <- unique(est$CODIGOMUNICIPIO)[!(unique(est$CODIGOMUNICIPIO) %in% unique(muestra3etapas$CODIGOMUNICIPIO))]
Xbar_d_noobs <- Xbar_d[row.names(Xbar_d) %in% dominios_noobservados,]
MSE_DominiosNoobservados <- diag((Xbar_d_noobs %*% Varest_betaest %*% t(Xbar_d_noobs)) + sigma2est_u)
MSE_DominiosNoobservados <- as.table(MSE_DominiosNoobservados)
df_MSE_DominiosNoobservados <- as.data.frame(MSE_DominiosNoobservados)
names(df_MSE_DominiosNoobservados) <- c("MUNICIPIO", "MSE")
df_MSE_DominiosNoobservados$ClaseDominio <- "No observado"
df_MSE_Dominiosobservados <- BHF$mse
names(df_MSE_Dominiosobservados) <- c("MUNICIPIO", "MSE")
df_MSE_Dominiosobservados$ClaseDominio <- "Observado"
df_MSE_Dominios <- bind_rows(df_MSE_DominiosNoobservados, df_MSE_Dominiosobservados)
df_MSE_Dominios <- df_MSE_Dominios[order(df_MSE_Dominios$MUNICIPIO),]
# Resultados finales
Resultados <- merge(Prom_dominios, df_MSE_Dominios, by = "MUNICIPIO")
Resultados$Yhat_BHF <- ifelse(Resultados$ClaseDominio == "No observado", Resultados$Ybar_efectosfijos,
Resultados$eblup)
Resultados$cve <- 100 * sqrt(Resultados$MSE) / Resultados$Yhat_BHF
mean_cve <- c(x1, x2, x3, x4, mean(Resultados$cve))
}
X1 <- c("LECTURA_CRITICA_PUNT", "MATEMATICAS_PUNT", "SOCIALES_CIUDADANAS_PUNT", "CIENCIAS_NATURALES_PUNT", "INGLES_PUNT")
X3 <- c("CALENDARIO", "NATURALEZA", "JORNADA", "EVALUADOS")
X4 <- c("PERS_GENERO", "FINS_PERSONASHOGARACTUAL", "FINS_CUARTOSHOGARACTUAL",
"FINS_PISOSHOGAR", "FINS_TIENEINTERNET", "FINS_TIENECOMPUTADOR",
"FINS_TIENEAUTOMOVILPARTICULAR", "INGLES_DESEM")
table_cves <- as.data.frame(matrix(NA,2000,5))
names(table_cves) <- c("Var_x1", "Var_x2", "Var_x3", "Var_x4", "Mean_cves")
head(table_cves)
i <- 1
for (x1 in X1){
for (x3 in X3){
for (x4 in X4){
BHF_mean_cve <- BHF_Function(x1, x3, x4)
table_cves[i,] <- BHF_mean_cve
i <- i + 1
}
}
}
table_cves
table_cves <- as.data.frame(matrix(NA,2000,6))
names(table_cves) <- c("Var_x1", "Var_x2", "Var_x3", "Var_x4", "Mean_cves", "sd_cves")
head(table_cves)
i <- 1
for (x1 in X1){
for (x3 in X3){
for (x4 in X4){
BHF_mean_cve <- BHF_Function(x1, x3, x4)
table_cves[i,] <- BHF_mean_cve
i <- i + 1
}
}
}
table_cves
BHF_Function <- function(x1,x3,x4){
ifelse(x3=="CALENDARIO", x_3<-c("Prop_Calendario_B", "Prop_Calendario_Flexible"),
ifelse(x3=="NATURALEZA", x_3<-c("Prop_Naturaleza_Oficial"),
ifelse(x3=="JORNADA", x_3<-c("Prop_Jornada_Completa", "Prop_Jornada_Manana",
"Prop_Jornada_Tarde", "Prop_Jornada_Noche"),
ifelse(x3=="EVALUADOS", x_3<-c("Prom_Evaluados")))))
ifelse(x4=="PERS_GENERO", x_4<-c("Prop_Genero_F"),
ifelse(x4=="FINS_PERSONASHOGARACTUAL", x_4<-c("Prom_Pers_Hogar"),
ifelse(x4=="FINS_CUARTOSHOGARACTUAL", x_4<-c("Prom_Cuartos_Hogar"),
ifelse(x4=="FINS_PISOSHOGAR", x_4<-c("Prop_Pisos_Cemento", "Prop_Pisos_Madera","Prop_Pisos_Baldosa_Marmol"),
ifelse(x4=="FINS_TIENEINTERNET", x_4<-c("Prop_Internet_Si"),
ifelse(x4=="FINS_TIENECOMPUTADOR", x_4<-c("Prop_Computador_Si"),
ifelse(x4=="FINS_TIENEAUTOMOVILPARTICULAR", x_4<-c("Prop_Auto_Si"),
ifelse(x4=="INGLES_DESEM", x_4<-c("Prop_Ingles_A1", "Prop_Ingles_A2",
"Prop_Ingles_B", "Prop_Ingles_B1")))))))))
Medias <- Infoaux[,c("CODIGOMUNICIPIO", paste0("Prom_",x1),
"Prop_Estrato2", "Prop_Estrato3", "Prop_Estrato4", "Prop_Estrato5", "Prop_Estrato6",
x_3,
x_4)]
Medias$CODIGOMUNICIPIO <- as.character(Medias$CODIGOMUNICIPIO)
formula <- as.formula(paste0("MATEMATICAS_PUNT", "~", x1, "+", "FINS_ESTRATOVIVIENDAENERGIA", "+", x3, "+", x4))
BHF <- pbmseBHF(formula,
dom = CODIGOMUNICIPIO,
meanxpop = Medias,
popnsize = Tamanos,
B = 200, data = muestra3etapas)
# Estimaciones para dominios externos (que no salieron en la muestra)
Beta_est <- BHF$est$fit$fixed
names(Beta_est) <- gsub("XsXs", "", names(Beta_est) )
names(Beta_est)[1] <-" Intercepto"
Beta_est <- as.matrix(Beta_est)
# Totales por dominio
Xbar_d <- Infoaux[ c(x_1, x_2, x_3, x_4)]
Unos <- as.data.frame(as.matrix(rep(1, nrow(Infoaux))))
Xbar_d <- cbind(Unos, Xbar_d)
Xbar_d <- as.matrix(Xbar_d)
rownames(Xbar_d) <- Infoaux$CODIGOMUNICIPIO
Prom_dominios <- Xbar_d %*% Beta_est
rownames(Prom_dominios) <- Infoaux$CODIGOMUNICIPIO
Prom_dominios <- as.data.frame(Prom_dominios)
Prom_dominios$domain <- row.names(Prom_dominios)
colnames(Prom_dominios)[1] <- "Ybar_efectosfijos"
# Conservar los dominios no observados
Prom_dominios_observados <- BHF$est$eblup
Prom_dominios <- merge(Prom_dominios, Prom_dominios_observados, by = "domain", all.x = T)
names(Prom_dominios)[1] <- "MUNICIPIO"
############ Estimaci�n MSE para dominios no observados ###########
modelo_mixto <- lme(formula, random = ~1 | as.factor(CODIGOMUNICIPIO), data = muestra3etapas)
Varest_betaest <- vcov(modelo_mixto)
sigma2est_u <- BHF[[1]]$fit$refvar
# Identificar los dominios no observados
dominios_noobservados <- unique(est$CODIGOMUNICIPIO)[!(unique(est$CODIGOMUNICIPIO) %in% unique(muestra3etapas$CODIGOMUNICIPIO))]
Xbar_d_noobs <- Xbar_d[row.names(Xbar_d) %in% dominios_noobservados,]
MSE_DominiosNoobservados <- diag((Xbar_d_noobs %*% Varest_betaest %*% t(Xbar_d_noobs)) + sigma2est_u)
MSE_DominiosNoobservados <- as.table(MSE_DominiosNoobservados)
df_MSE_DominiosNoobservados <- as.data.frame(MSE_DominiosNoobservados)
names(df_MSE_DominiosNoobservados) <- c("MUNICIPIO", "MSE")
df_MSE_DominiosNoobservados$ClaseDominio <- "No observado"
df_MSE_Dominiosobservados <- BHF$mse
names(df_MSE_Dominiosobservados) <- c("MUNICIPIO", "MSE")
df_MSE_Dominiosobservados$ClaseDominio <- "Observado"
df_MSE_Dominios <- bind_rows(df_MSE_DominiosNoobservados, df_MSE_Dominiosobservados)
df_MSE_Dominios <- df_MSE_Dominios[order(df_MSE_Dominios$MUNICIPIO),]
# Resultados finales
Resultados <- merge(Prom_dominios, df_MSE_Dominios, by = "MUNICIPIO")
Resultados$Yhat_BHF <- ifelse(Resultados$ClaseDominio == "No observado", Resultados$Ybar_efectosfijos,
Resultados$eblup)
Resultados$cve <- 100 * sqrt(Resultados$MSE) / Resultados$Yhat_BHF
mean_cve <- c(x1, x2, x3, x4, mean(Resultados$cve), sd(Resultados$cve))
}
X1 <- c("LECTURA_CRITICA_PUNT", "MATEMATICAS_PUNT", "SOCIALES_CIUDADANAS_PUNT", "CIENCIAS_NATURALES_PUNT", "INGLES_PUNT")
X3 <- c("CALENDARIO", "NATURALEZA", "JORNADA", "EVALUADOS")
X4 <- c("PERS_GENERO", "FINS_PERSONASHOGARACTUAL", "FINS_CUARTOSHOGARACTUAL",
"FINS_PISOSHOGAR", "FINS_TIENEINTERNET", "FINS_TIENECOMPUTADOR",
"FINS_TIENEAUTOMOVILPARTICULAR", "INGLES_DESEM")
table_cves <- as.data.frame(matrix(NA,2000,6))
names(table_cves) <- c("Var_x1", "Var_x2", "Var_x3", "Var_x4", "Mean_cves", "sd_cves")
head(table_cves)
i <- 1
for (x1 in X1){
for (x3 in X3){
for (x4 in X4){
BHF_mean_cve <- BHF_Function(x1, x3, x4)
table_cves[i,] <- BHF_mean_cve
i <- i + 1
}
}
}
table_cves
X1 <- c("LECTURA_CRITICA_PUNT", "SOCIALES_CIUDADANAS_PUNT", "CIENCIAS_NATURALES_PUNT", "INGLES_PUNT")
X3 <- c("CALENDARIO", "NATURALEZA", "JORNADA", "EVALUADOS")
X4 <- c("PERS_GENERO", "FINS_PERSONASHOGARACTUAL", "FINS_CUARTOSHOGARACTUAL",
"FINS_PISOSHOGAR", "FINS_TIENEINTERNET", "FINS_TIENECOMPUTADOR",
"FINS_TIENEAUTOMOVILPARTICULAR", "INGLES_DESEM")
table_cves <- as.data.frame(matrix(NA,2000,6))
names(table_cves) <- c("Var_x1", "Var_x2", "Var_x3", "Var_x4", "Mean_cves", "sd_cves")
head(table_cves)
i <- 1
for (x1 in X1){
for (x3 in X3){
for (x4 in X4){
BHF_mean_cve <- BHF_Function(x1, x3, x4)
table_cves[i,] <- BHF_mean_cve
i <- i + 1
}
}
}
table_cves
table_cves <- table_cves[128,]
table_cves
table_cves <- table_cves[1:128,]
table_cves
X1 <- c("LECTURA_CRITICA_PUNT", "SOCIALES_CIUDADANAS_PUNT", "CIENCIAS_NATURALES_PUNT", "INGLES_PUNT")
X3 <- c("CALENDARIO", "NATURALEZA", "JORNADA", "EVALUADOS")
X4 <- c("PERS_GENERO", "FINS_PERSONASHOGARACTUAL", "FINS_CUARTOSHOGARACTUAL",
"FINS_PISOSHOGAR", "FINS_TIENEINTERNET", "FINS_TIENECOMPUTADOR",
"FINS_TIENEAUTOMOVILPARTICULAR", "INGLES_DESEM")
table_cves <- as.data.frame(matrix(NA,128,6))
names(table_cves) <- c("Var_x1", "Var_x2", "Var_x3", "Var_x4", "Mean_cves", "sd_cves")
i <- 1
i <- 1
for (x1 in X1){
for (x3 in X3){
for (x4 in X4){
BHF_mean_cve <- BHF_Function(x1, x3, x4)
table_cves[i,] <- BHF_mean_cve
i <- i + 1
}
}
}
rm(list = ls())
library(survey)
library(sae)
library(TeachingSampling)
library(dplyr)
library(nlme)
options(survey.lonely.psu="adjust")
est <- readRDS("estudiantes.rds")
muestra3etapas <- readRDS("muestra3etapas.rds")
# Variables para x2:
est$FINS_ESTRATOVIVIENDAENERGIA[is.na(est$FINS_ESTRATOVIVIENDAENERGIA)] <- 1
# Variables para x4:
est$PERS_GENERO[is.na(est$PERS_GENERO)] <- names(table(est$PERS_GENERO)[which.max(table(est$PERS_GENERO))])
est$FINS_PERSONASHOGARACTUAL[is.na(est$FINS_PERSONASHOGARACTUAL)] <- 5
est$FINS_CUARTOSHOGARACTUAL[is.na(est$FINS_CUARTOSHOGARACTUAL)] <- 3
est$FINS_PISOSHOGAR[is.na(est$FINS_PISOSHOGAR)] <- names(table(est$FINS_PISOSHOGAR)[which.max(table(est$FINS_PISOSHOGAR))])
est$FINS_TIENEINTERNET[is.na(est$FINS_TIENEINTERNET)] <- names(table(est$FINS_TIENEINTERNET)[which.max(table(est$FINS_TIENEINTERNET))])
est$FINS_TIENECOMPUTADOR[is.na(est$FINS_TIENECOMPUTADOR)] <- names(table(est$FINS_TIENECOMPUTADOR)[which.max(table(est$FINS_TIENECOMPUTADOR))])
est$FINS_TIENEAUTOMOVILPARTICULAR[is.na(est$FINS_TIENEAUTOMOVILPARTICULAR)] <- names(table(est$FINS_TIENEAUTOMOVILPARTICULAR)[which.max(table(est$FINS_TIENEAUTOMOVILPARTICULAR))])
Dummies_estrato_energia  <- as.data.frame(Domains(est$FINS_ESTRATOVIVIENDAENERGIA))
est <- cbind(est,Dummies_estrato_energia)
unique(est$CALENDARIO)
Dummies_calendario  <- as.data.frame(Domains(est$CALENDARIO))
est <- cbind(est,Dummies_calendario)
unique(est$PERS_GENERO)
Dummies_Pers_Genero  <- as.data.frame(Domains(est$PERS_GENERO))
est <- cbind(est,Dummies_Pers_Genero)
Infoaux <- est %>% group_by(CODIGOMUNICIPIO) %>%
summarise(Prom_LECTURA_CRITICA_PUNT = mean(LECTURA_CRITICA_PUNT),
Prop_Estrato1 = mean(Estrato1),
Prop_Estrato2 = mean(Estrato2),
Prop_Estrato3 = mean(Estrato3),
Prop_Estrato4 = mean(Estrato4),
Prop_Estrato5 = mean(Estrato5),
Prop_Estrato6 = mean(Estrato6),
Prop_Calendario_A = mean(Calendario_A),
Prop_Calendario_B = mean(Calendario_B),
Prop_Calendario_Flexible = mean(Calendario_flexible),
Prop_Genero_F = mean(Genero_F),
Prop_Genero_M = mean(Genero_M),
N_d = n() )
names(est)
Infoaux <- est %>% group_by(CODIGOMUNICIPIO) %>%
summarise(Prom_LECTURA_CRITICA_PUNT = mean(LECTURA_CRITICA_PUNT),
Prop_Estrato1 = mean(`1`),
Prop_Estrato2 = mean(`2`),
Prop_Estrato3 = mean(`3`),
Prop_Estrato4 = mean(`4`),
Prop_Estrato5 = mean(`5`),
Prop_Estrato6 = mean(`6`),
Prop_Calendario_A = mean(`Calendario A`),
Prop_Calendario_B = mean(`Calendario B`),
Prop_Calendario_Flexible = mean(`Calendario flexible`),
Prop_Genero_F = mean(M),
Prop_Genero_M = mean(`F`),
N_d = n() )
Tamanos <- Infoaux[,c("CODIGOMUNICIPIO", "N_d")]
names(Infoaux)
Medias <- Infoaux[,c("CODIGOMUNICIPIO", "Prom_LECTURA_CRITICA_PUNT",
"Prop_Estrato2", "Prop_Estrato3", "Prop_Estrato4", "Prop_Estrato5", "Prop_Estrato6",
"Prop_Calendario_B", "Prop_Calendario_Flexible",
"Prop_Genero_F")]
# Convertir a caracter
Tamanos$CODIGOMUNICIPIO <- as.character(Tamanos$CODIGOMUNICIPIO)
Medias$CODIGOMUNICIPIO <- as.character(Medias$CODIGOMUNICIPIO)
muestra3etapas$CODIGOMUNICIPIO <- as.character(muestra3etapas$CODIGOMUNICIPIO)
# Modelo
BHF <- pbmseBHF(MATEMATICAS_PUNT ~ LECTURA_CRITICA_PUNT + FINS_ESTRATOVIVIENDAENERGIA + CALENDARIO + PERS_GENERO,
dom = CODIGOMUNICIPIO,
meanxpop = Medias,
popnsize = Tamanos,
B = 200, data = muestra3etapas)
rm(list = ls())
library(survey)
library(sae)
library(TeachingSampling)
library(dplyr)
library(nlme)
options(survey.lonely.psu="adjust")
#**************************************
#******* MUESTRA PRUEBAS SABER ********
#**************************************
est <- readRDS("estudiantes.rds")
muestra3etapas <- readRDS("muestra3etapas.rds")
# Dominio Depto(Cod depto)
# y_est: Puntaje Matematicas
# x1: puntaje materias (una materia)
# x2: Estrato eneriga
# x3: Variable colegio (ej: jornada, ofc/priv, calendario)
# x4: ? la que se le pague la gana
# Transformar variables, quitar nulos
# Variables para x2:
est$FINS_ESTRATOVIVIENDAENERGIA[is.na(est$FINS_ESTRATOVIVIENDAENERGIA)] <- 1
# Variables para x4:
est$PERS_GENERO[is.na(est$PERS_GENERO)] <- names(table(est$PERS_GENERO)[which.max(table(est$PERS_GENERO))])
est$FINS_PERSONASHOGARACTUAL[is.na(est$FINS_PERSONASHOGARACTUAL)] <- 5
est$FINS_CUARTOSHOGARACTUAL[is.na(est$FINS_CUARTOSHOGARACTUAL)] <- 3
est$FINS_PISOSHOGAR[is.na(est$FINS_PISOSHOGAR)] <- names(table(est$FINS_PISOSHOGAR)[which.max(table(est$FINS_PISOSHOGAR))])
est$FINS_TIENEINTERNET[is.na(est$FINS_TIENEINTERNET)] <- names(table(est$FINS_TIENEINTERNET)[which.max(table(est$FINS_TIENEINTERNET))])
est$FINS_TIENECOMPUTADOR[is.na(est$FINS_TIENECOMPUTADOR)] <- names(table(est$FINS_TIENECOMPUTADOR)[which.max(table(est$FINS_TIENECOMPUTADOR))])
est$FINS_TIENEAUTOMOVILPARTICULAR[is.na(est$FINS_TIENEAUTOMOVILPARTICULAR)] <- names(table(est$FINS_TIENEAUTOMOVILPARTICULAR)[which.max(table(est$FINS_TIENEAUTOMOVILPARTICULAR))])
# Crear Dumies
Dummies_estrato_energia  <- as.data.frame(Domains(est$FINS_ESTRATOVIVIENDAENERGIA))
est <- cbind(est,Dummies_estrato_energia)
unique(est$CALENDARIO)
Dummies_calendario  <- as.data.frame(Domains(est$CALENDARIO))
est <- cbind(est,Dummies_calendario)
unique(est$PERS_GENERO)
Dummies_Pers_Genero  <- as.data.frame(Domains(est$PERS_GENERO))
est <- cbind(est,Dummies_Pers_Genero)
names(est)
Infoaux <- est %>% group_by(CODIGOMUNICIPIO) %>%
summarise(Prom_LECTURA_CRITICA_PUNT = mean(LECTURA_CRITICA_PUNT),
Prop_Estrato1 = mean(`1`),
Prop_Estrato2 = mean(`2`),
Prop_Estrato3 = mean(`3`),
Prop_Estrato4 = mean(`4`),
Prop_Estrato5 = mean(`5`),
Prop_Estrato6 = mean(`6`),
Prop_Calendario_A = mean(`Calendario A`),
Prop_Calendario_B = mean(`Calendario B`),
Prop_Calendario_Flexible = mean(`Calendario flexible`),
Prop_Genero_F = mean(M),
Prop_Genero_M = mean(`F`),
N_d = n() )
# Convertir en factores las categoricas de la muestra
muestra3etapas$CALENDARIO <- as.factor(muestra3etapas$CALENDARIO)
muestra3etapas$NATURALEZA <- as.factor(muestra3etapas$NATURALEZA)
muestra3etapas$JORNADA <- as.factor(muestra3etapas$JORNADA)
muestra3etapas$PERS_GENERO <- as.factor(muestra3etapas$PERS_GENERO)
muestra3etapas$FINS_ESTRATOVIVIENDAENERGIA <- as.factor(muestra3etapas$FINS_ESTRATOVIVIENDAENERGIA)
muestra3etapas$FINS_PISOSHOGAR <- as.factor(muestra3etapas$FINS_PISOSHOGAR)
muestra3etapas$FINS_TIENEINTERNET <- as.factor(muestra3etapas$FINS_TIENEINTERNET)
muestra3etapas$FINS_TIENECOMPUTADOR <- as.factor(muestra3etapas$FINS_TIENECOMPUTADOR)
muestra3etapas$FINS_TIENEAUTOMOVILPARTICULAR <- as.factor(muestra3etapas$FINS_TIENEAUTOMOVILPARTICULAR)
muestra3etapas$INGLES_DESEM <- as.factor(muestra3etapas$INGLES_DESEM)
Tamanos <- Infoaux[,c("CODIGOMUNICIPIO", "N_d")]
names(Infoaux)
Medias <- Infoaux[,c("CODIGOMUNICIPIO", "Prom_LECTURA_CRITICA_PUNT",
"Prop_Estrato2", "Prop_Estrato3", "Prop_Estrato4", "Prop_Estrato5", "Prop_Estrato6",
"Prop_Calendario_B", "Prop_Calendario_Flexible",
"Prop_Genero_F")]
# Convertir a caracter
Tamanos$CODIGOMUNICIPIO <- as.character(Tamanos$CODIGOMUNICIPIO)
Medias$CODIGOMUNICIPIO <- as.character(Medias$CODIGOMUNICIPIO)
muestra3etapas$CODIGOMUNICIPIO <- as.character(muestra3etapas$CODIGOMUNICIPIO)
# Modelo
BHF <- pbmseBHF(MATEMATICAS_PUNT ~ LECTURA_CRITICA_PUNT + FINS_ESTRATOVIVIENDAENERGIA + CALENDARIO + PERS_GENERO,
dom = CODIGOMUNICIPIO,
meanxpop = Medias,
popnsize = Tamanos,
B = 200, data = muestra3etapas)
# Estimaci�n para dominios observados
BHF$est$eblup
# Estimaci�n del error cuadr�tico medio
BHF$mse
# cv
sqrt(BHF$mse$mse) / BHF$est$eblup$eblup * 100
# Estimaciones para dominios externos (que no salieron en la muestra)
Beta_est <- BHF$est$fit$fixed
names(Beta_est) <- gsub("XsXs", "", names(Beta_est) )
names(Beta_est)[1] <-" Intercepto"
Beta_est <- as.matrix(Beta_est)
# Totales por dominio
x_1 <- "Prom_LECTURA_CRITICA_PUNT"
x_2 <- c("Prop_Estrato2", "Prop_Estrato3", "Prop_Estrato4", "Prop_Estrato5", "Prop_Estrato6")
x_3 <- c("Prop_Calendario_B", "Prop_Calendario_Flexible")
x_4 <- "Prop_Genero_F"
Xbar_d <- Infoaux[ c(x_1, x_2, x_3, x_4)]
Unos <- as.data.frame(as.matrix(rep(1, nrow(Infoaux))))
Xbar_d <- cbind(Unos, Xbar_d)
Xbar_d <- as.matrix(Xbar_d)
rownames(Xbar_d) <- Infoaux$CODIGOMUNICIPIO
head(Xbar_d)
Prom_dominios <- Xbar_d %*% Beta_est
rownames(Prom_dominios) <- Infoaux$CODIGOMUNICIPIO
Prom_dominios <- as.data.frame(Prom_dominios)
Prom_dominios$domain <- row.names(Prom_dominios)
colnames(Prom_dominios)[1] <- "Ybar_efectosfijos"
head(Prom_dominios)
# Conservar los dominios no observados
Prom_dominios_observados <- BHF$est$eblup
Prom_dominios <- merge(Prom_dominios, Prom_dominios_observados, by = "domain", all.x = T)
names(Prom_dominios)[1] <- "MUNICIPIO"
head(Prom_dominios)
library(nlme)
modelo_mixto <- lme(formula, random = ~1 | as.factor(CODIGOMUNICIPIO), data = muestra3etapas)
#\hat{V}(\hat{\bodysymbol{\beta}}):
Varest_betaest <- vcov(modelo_mixto)
library(nlme)
modelo_mixto <- lme(formula, random = ~1 | as.factor(CODIGOMUNICIPIO), data = muestra3etapas)
modelo_mixto <- lme(MATEMATICAS_PUNT ~ LECTURA_CRITICA_PUNT + FINS_ESTRATOVIVIENDAENERGIA + CALENDARIO + PERS_GENERO, random = ~1 | as.factor(CODIGOMUNICIPIO), data = muestra3etapas)
#\hat{V}(\hat{\bodysymbol{\beta}}):
Varest_betaest <- vcov(modelo_mixto)
# \hat{sigma}^2_u
sigma2est_u <- BHF[[1]]$fit$refvar #29.66217^2 #EN modelo_mixto observese que es la misma estimacion
# Identificar los dominios no observados
dominios_noobservados <- unique(est$CODIGOMUNICIPIO)[!(unique(est$CODIGOMUNICIPIO) %in% unique(muestra3etapas$CODIGOMUNICIPIO))]
Xbar_d_noobs <- Xbar_d[row.names(Xbar_d) %in% dominios_noobservados,]
MSE_DominiosNoobservados <- diag((Xbar_d_noobs %*% Varest_betaest %*% t(Xbar_d_noobs)) + sigma2est_u)
MSE_DominiosNoobservados <- as.table(MSE_DominiosNoobservados)
df_MSE_DominiosNoobservados <- as.data.frame(MSE_DominiosNoobservados)
names(df_MSE_DominiosNoobservados) <- c("MUNICIPIO", "MSE")
df_MSE_DominiosNoobservados$ClaseDominio <- "No observado"
head(df_MSE_DominiosNoobservados)
df_MSE_Dominiosobservados <- BHF$mse
names(df_MSE_Dominiosobservados) <- c("MUNICIPIO", "MSE")
df_MSE_Dominiosobservados$ClaseDominio <- "Observado"
head(df_MSE_Dominiosobservados)
df_MSE_Dominios <- bind_rows(df_MSE_DominiosNoobservados, df_MSE_Dominiosobservados)
df_MSE_Dominios <- df_MSE_Dominios[order(df_MSE_Dominios$MUNICIPIO),]
# Tienden a dar m�s MSE los dominios no obsevados
boxplot(MSE ~ ClaseDominio, data = df_MSE_Dominios)
Resultados <- merge(Prom_dominios, df_MSE_Dominios, by = "MUNICIPIO")
Resultados$Yhat_BHF <- ifelse(Resultados$ClaseDominio == "No observado", Resultados$Ybar_efectosfijos,
Resultados$eblup)
Resultados$cve <- 100 * sqrt(Resultados$MSE) / Resultados$Yhat_BHF
head(Resultados)
mean(Resultados$cve)
rm(list = ls())
options(survey.lonely.psu="adjust")
library(dplyr)
library(stratification)
est <- readRDS("estudiantes.rds")
est <- est[c("CODIGOMUNICIPIO", "NOMBREMUNICIPIO" ,"CODIGO_ICFES","ID_estud",
"AGSB_NOMBREINSTITUCION", "DEPARTAMENTO", "CALENDARIO",
"NATURALEZA", "JORNADA", "PERS_GENERO", "FINS_ESTRATOVIVIENDAENERGIA", "FINS_PERSONASHOGARACTUAL",
"FINS_CUARTOSHOGARACTUAL", "FINS_PISOSHOGAR", "FINS_TIENEINTERNET",
"FINS_TIENECOMPUTADOR", "FINS_TIENEAUTOMOVILPARTICULAR", "LECTURA_CRITICA_PUNT",
"MATEMATICAS_PUNT", "SOCIALES_CIUDADANAS_PUNT", "CIENCIAS_NATURALES_PUNT",
"INGLES_PUNT", "INGLES_DESEM", "EVALUADOS")]
est$CALENDARIO <- as.character(est$CALENDARIO)
est$NATURALEZA <- as.character(est$NATURALEZA)
est$JORNADA <- as.character(est$JORNADA)
cons_mpio <- est %>% group_by(CODIGOMUNICIPIO) %>% summarise(tx = n())
set.seed(12345)
numestratos <- 8
LH <- strata.LH(x = cons_mpio$tx, CV = 0.03, Ls = numestratos, takeall = T)
View(LH)
cortes <- c(min(cons_mpio$tx), LH$bh, max(cons_mpio$tx))
cons_mpio$estrato_mpio <- cut(cons_mpio$tx, breaks = cortes, include.lowest = T, right = F,
label = paste0("Estrato", 1:numestratos))
View(cons_mpio)
cons_mpio <- arrange(cons_mpio, tx)
cons_mpio
set.seed(12345)
indica_estratifMpio <- sampling::strata(cons_mpio, "estrato_mpio", size = LH$nh,
method = "srswor", description = T)
mue_mpios <- sampling::getdata(cons_mpio, indica_estratifMpio)
mue_mpios <- mue_mpios[c("estrato_mpio", "CODIGOMUNICIPIO")]
mue_mpios
